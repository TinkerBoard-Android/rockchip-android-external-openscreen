# Copyright 2018 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build_overrides/build.gni")

source_set("platform") {
  defines = []

  sources = [
    "api/event_waiter.cc",
    "api/event_waiter.h",
    "api/logging.cc",
    "api/logging.h",
    "api/network_interface.cc",
    "api/network_interface.h",
    "api/socket.h.",
    "api/task_runner.h",
    "api/task_runner_factory.h",
    "api/time.h",
    "base/event_loop.cc",
    "base/event_loop.h",
    "base/time.cc",
  ]

  deps = []
  public_deps = [
    "../base",
    "../third_party/abseil",
  ]
  configs += [ "..:root_config_overrides" ]

  if (build_with_chromium) {
    deps += [ ":chromium" ]
    public_deps += [ "//base" ]
  } else {  # !build_with_chromium
    sources += [
      "base/logging.cc",
      "base/task_runner_factory.cc",
      "base/task_runner_impl.cc",
      "base/task_runner_impl.h",
    ]

    if (is_linux) {
      sources += [ "linux/network_interface.cc" ]
    } else if (is_mac) {
      defines += [
        # Required, to use the new IPv6 Sockets options introduced by RFC 3542.
        "__APPLE_USE_RFC_3542",
      ]
      sources += [ "mac/network_interface.cc" ]
    }

    if (is_posix) {
      sources += [
        "posix/event_waiter.cc",
        "posix/logging.cc",
        "posix/socket.cc",
        "posix/socket.h",
      ]
    }
  }
}

if (build_with_chromium) {
  source_set("chromium") {
    sources = [
      "chromium/logging.cc",
    ]

    deps = [
      "../third_party/abseil",
      "//base",
    ]

    configs += [ "..:root_config_overrides" ]
  }
}

source_set("platform_unittests") {
  testonly = true

  sources = [
    "api/time_unittest.cc",
  ]

  # The unit tests in base/ assume the standalone implementation is being used.
  # Exclude them if an embedder is providing the implementation.
  if (!build_with_chromium) {
    sources += [
      "base/task_runner_unittest.cc",
      "base/time_unittest.cc",
    ]
  }

  deps = [
    ":platform",
    "//third_party/googletest:gtest",
  ]

  configs += [ "..:root_config_overrides" ]
}
