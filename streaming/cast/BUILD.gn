# Copyright 2019 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build_overrides/build.gni")

source_set("cast") {
  sources = [
    "clock_drift_smoother.cc",
    "clock_drift_smoother.h",
    "constants.h",
    "encoded_frame.cc",
    "encoded_frame.h",
    "expanded_value_base.h",
    "frame_crypto.cc",
    "frame_crypto.h",
    "frame_id.cc",
    "frame_id.h",
    "ntp_time.cc",
    "ntp_time.h",
    "rtp_time.cc",
    "rtp_time.h",
    "ssrc.cc",
    "ssrc.h",
  ]

  # TODO(btolsch): Here and elsewhere, this begs the question of whether we
  # should either change //base to //osp_base (like webrtc) or maybe introduce
  # an osp_source_set template (also like webrtc).
  if (build_with_chromium) {
    configs -= [ "//build/config/compiler:default_include_dirs" ]
  }
  configs += [ "../..:root_config_overrides" ]
  public_deps = [
    "../../third_party/abseil",
    "../../third_party/boringssl",
  ]

  deps = [
    "../../platform",
  ]
}

source_set("cast_unittests") {
  testonly = true

  sources = [
    "expanded_value_base_unittest.cc",
    "frame_crypto_unittest.cc",
    "ntp_time_unittest.cc",
    "rtp_time_unittest.cc",
    "ssrc_unittest.cc",
  ]

  if (build_with_chromium) {
    configs -= [ "//build/config/compiler:default_include_dirs" ]
  }
  configs += [ "../..:root_config_overrides" ]
  deps = [
    ":cast",
    "../../third_party/googletest:gtest",
  ]
}
